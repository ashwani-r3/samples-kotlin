apply plugin: 'net.corda.plugins.cordapp'
apply plugin: 'net.corda.plugins.cordformation'
apply plugin: 'net.corda.plugins.quasar-utils'

jar {
    // CorDapps do not configure the Node's logging.
    exclude '**/log4j2*.xml'
}

cordapp {
    targetPlatformVersion corda_platform_version.toInteger()
    minimumPlatformVersion corda_platform_version.toInteger()
    workflow {
        name "Flow DB"
        vendor "Corda Open Source"
        licence "Apache License, Version 2.0"
        versionId 1
    }
}

dependencies {

    // Corda dependencies.
    cordaProvided "$corda_core_release_group:corda-core:$corda_core_release_version"
    cordaProvided "$corda_release_group:corda-jackson:$corda_release_version"
    cordaProvided "$corda_release_group:corda-rpc:$corda_release_version"
    cordaProvided "org.apache.logging.log4j:log4j-slf4j-impl:$log4j_version"

    testImplementation "$corda_release_group:corda-node-api:$corda_release_version"
    testImplementation "$corda_release_group:corda-node-driver:$corda_release_version"
    testImplementation "org.jetbrains.kotlin:kotlin-test:$kotlin_version"
    testImplementation "junit:junit:$junit_version"
}

quasar {
    excludePackages.addAll(
            "antlr**",
            "com.codahale**",
            "com.fasterxml.**",
            "com.github.benmanes.caffeine.**",
            "com.google.**",
            "com.lmax.**",
            "com.zaxxer.**",
            "net.bytebuddy**",
            "io.github.classgraph**",
            "io.netty*",
            "liquibase**",
            "net.i2p.crypto.**",
            "nonapi.io.github.classgraph.**",
            "org.apiguardian.**",
            "org.bouncycastle**",
            "org.codehaus.**",
            "org.h2**",
            "org.hibernate**",
            "org.jboss.**",
            "org.objenesis**",
            "org.w3c.**",
            "org.xml**",
            "org.yaml**",
            "kotlin**",
            "rx**")
}

test {
    jvmArgs test_add_opens
}
